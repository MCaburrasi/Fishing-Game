[gd_scene load_steps=10 format=3 uid="uid://dhe5uxbg8isn8"]

[sub_resource type="Environment" id="Environment_iwpey"]
background_mode = 1
background_color = Color(0, 0.658824, 1, 1)
ambient_light_source = 3
ambient_light_color = Color(1, 1, 1, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_iwpey"]
albedo_color = Color(0.424896, 0.200458, 0.0887584, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_g4qto"]
albedo_color = Color(1, 0, 0, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_hr5et"]
albedo_color = Color(0, 0.2, 1, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_88b43"]
albedo_color = Color(0.0143886, 0.330112, 0.0116939, 1)

[sub_resource type="GDScript" id="GDScript_88b43"]
script/source = "extends CharacterBody3D


const WALK_SPEED = 5.0
const SPRINT_SPEED = 8.0
const JUMP_VELOCITY = 5.5
const SENSITIVITY = 0.003
const BOB_FREQUENCY = 2.0
const BOB_AMPLITUDE = 0.08
const BASE_FOV = 75.0
const FOV_CHANGE = 1.5


var t_bob = 0.0
var speed = 0.0
var castingTime = 0.0
var strength = 0.0

@onready var head = $Head
@onready var camera = $Head/Camera3D
@onready var arm = $Arm
@onready var rod = $Arm/Hand/FishingRod

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)

func _unhandled_input(event):
	if event is InputEventMouseMotion:
		head.rotate_y(-event.relative.x * SENSITIVITY)
		arm.rotate_y(-event.relative.x * SENSITIVITY)
		camera.rotate_x(-event.relative.y * SENSITIVITY)
		rod.rotate_x(-event.relative.y * SENSITIVITY)
		camera.rotation.x = clamp(camera.rotation.x, deg_to_rad(-70), deg_to_rad(60))
		rod.rotation.x = clamp(camera.rotation.x, deg_to_rad(-45), deg_to_rad(-45))

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
	
	#Sprint
	if Input.is_action_pressed(\"sprint\"):
		speed = SPRINT_SPEED
	else:
		speed = WALK_SPEED

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"left\", \"right\", \"forward\", \"backward\")
	var direction = (head.transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if is_on_floor():
		if direction:
			velocity.x = direction.x * speed
			velocity.z = direction.z * speed
		else:
			velocity.x = lerp(velocity.x, direction.x * speed, delta * 7.0)
			velocity.z = lerp(velocity.z, direction.z * speed, delta * 7.0)
	else:
		velocity.x = lerp(velocity.x, direction.x * speed, delta * 2.0)
		velocity.z = lerp(velocity.z, direction.z * speed, delta * 2.0)
		
	#Handle Headbob
	t_bob += delta * velocity.length() * float(is_on_floor())
	var bob = _headbob(t_bob)
	camera.transform.origin = bob
	rod.transform.origin = bob
	
	var velocity_clamped = clamp(velocity.length(), 0.5, SPRINT_SPEED * 2)
	var target_fov = BASE_FOV + FOV_CHANGE * velocity_clamped
	camera.fov = lerp(camera.fov, target_fov, delta * 8.0)
	
	if true: #isEquiped
		if Input.is_action_pressed(\"action\"):
			castingTime += 0.5
			strength = _calculateSrength(castingTime)
			print(strength)
		elif Input.is_action_just_released(\"action\"):
			print(castingTime)
			strength = _calculateSrength(castingTime)
			print(strength)
			castingTime = 0.0
			
	move_and_slide()
	
func _calculateSrength(castingTime) -> float:
	var strength = 0.0
	strength = (sin(castingTime) * 0.5 + 0.5) * 100
	return strength

func _headbob(time) -> Vector3:
	var pos = Vector3.ZERO
	pos.y = sin(time + BOB_FREQUENCY) * BOB_AMPLITUDE
	pos.x = cos(time + BOB_FREQUENCY / 2) * BOB_AMPLITUDE
	return pos
	
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_88b43"]

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_88b43"]
points = PackedVector3Array(-0.125207, -0.532801, -0.480507, 0.0227831, 0.47607, 0.498884, 0.169713, 0.559144, 0.464172, 0.231051, -0.803591, 0.320455, 0.40741, 0.651043, -0.243523, -0.482789, 0.594843, 0.0822132, -0.362868, -0.682312, 0.289697, 0.469044, -0.654529, -0.0662713, -0.127444, 0.842701, -0.338103, -0.393435, -0.683942, -0.244717, 0.438255, 0.623309, 0.200849, 0.0841477, 0.977454, 0.114795, -0.0682023, -0.976458, -0.12927, 0.20055, -0.563129, -0.451454, -0.185527, 0.595453, -0.453475, -0.273363, 0.592268, 0.407754, -0.00693649, -0.476823, 0.49966, 0.375821, -0.588614, 0.316955, 0.111579, 0.563059, -0.481177, -0.41725, 0.527866, -0.270497, -0.484546, -0.596972, -0.0665097, -0.279747, 0.908561, 0.0533361, -0.250197, -0.880712, 0.205319, 0.263647, -0.902771, -0.127394, 0.293368, 0.871526, -0.157196, 0.373412, -0.526319, -0.328246, 0.499663, 0.476641, -0.00688856, 0.0531056, 0.875001, 0.324703, -0.154543, -0.590854, 0.465879, -0.0972799, -0.782358, -0.398188, -0.387649, -0.498171, 0.31565, -0.30068, -0.587995, -0.388901)

[sub_resource type="CapsuleMesh" id="CapsuleMesh_iwpey"]

[node name="Node3D" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_iwpey")

[node name="CSGBox3D2" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 2.08635, 0, 0, 0, 1, -0.604359, 0.707262, 24.7998)
use_collision = true
size = Vector3(51.1787, 1, 1)
material = SubResource("StandardMaterial3D_iwpey")

[node name="CSGBox3D3" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 2.08635, 0, 0, 0, 1, -0.120595, 0.85601, -24.8449)
use_collision = true
size = Vector3(52.1462, 1, 1)
material = SubResource("StandardMaterial3D_iwpey")

[node name="CSGBox3D4" type="CSGBox3D" parent="."]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 2.08635, 0, 1, 0, -4.37114e-08, -25.5164, 0.85601, 0.00823593)
use_collision = true
size = Vector3(50.681, 1, 1)
material = SubResource("StandardMaterial3D_iwpey")

[node name="CSGBox3D5" type="CSGBox3D" parent="."]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 2.08635, 0, 1, 0, -4.37114e-08, 24.8637, 0.85601, 0.00823593)
use_collision = true
size = Vector3(50.681, 1, 1)
material = SubResource("StandardMaterial3D_iwpey")

[node name="CSGBox3D6" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -8.02528, 0.419037, -15.7542)
use_collision = true
size = Vector3(4.7771, 1.73065, 6.59473)
material = SubResource("StandardMaterial3D_g4qto")

[node name="CSGBox3D7" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.564914, 0.96077, -15.7542)
use_collision = true
size = Vector3(4.7771, 2.81412, 6.59473)
material = SubResource("StandardMaterial3D_hr5et")

[node name="CSGBox3D8" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 7.73697, 1.45313, -15.7542)
use_collision = true
size = Vector3(4.7771, 3.79884, 6.59473)
material = SubResource("StandardMaterial3D_g4qto")

[node name="CSGBox3D" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.146176, 0)
use_collision = true
collision_layer = 255
size = Vector3(50, 0.1, 50)
material = SubResource("StandardMaterial3D_88b43")

[node name="CharacterBody3D" type="CharacterBody3D" parent="."]
script = SubResource("GDScript_88b43")

[node name="MeshInstance3D" type="MeshInstance3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
mesh = SubResource("CapsuleMesh_88b43")

[node name="CollisionShape3D" type="CollisionShape3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.0447, 0)
shape = SubResource("ConvexPolygonShape3D_88b43")

[node name="Head" type="Node3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.45767, 0)

[node name="Camera3D" type="Camera3D" parent="CharacterBody3D/Head"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 5.97491, -0.0474399, 0.000455141, 0.0653901)

[node name="Arm" type="Node3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0599458, 1.24308, 0)

[node name="Hand" type="Node3D" parent="CharacterBody3D/Arm"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.57391, -0.171465, 0)

[node name="FishingRod" type="CSGMesh3D" parent="CharacterBody3D/Arm/Hand"]
transform = Transform3D(0.242416, 0, 0, 0, 0.804284, 0.118473, 0, -0.804284, 0.118473, 0.0396237, 0.147989, -0.440505)
mesh = SubResource("CapsuleMesh_iwpey")
